[tool.poetry]
name = "helply"
version = "0.4.2"
description = "A library that simplifies 'help' command creation for application commands in your discord bot."
authors = ["DLCHAMP <contact@dlchamp.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/dlchamp/helply"
homepage = "https://github.com/dlchamp/helply"
keywords = [
    "disnake",
    "discord",
]

classifiers=[
        "Development Status :: 4 - Beta",
        "License :: OSI Approved :: MIT License",
        "Intended Audience :: Developers",
        "Natural Language :: English",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Topic :: Software Development :: Libraries",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Topic :: Utilities",
        "Typing :: Typed",
    ]

packages = [
    { include = "helply", from = "src" }
]


[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.0.275"
black = "^23.3.0"
isort = "^5.12.0"
pre-commit = "^3.3.3"
pyright = "^1.1.318"
python-dotenv = "^1.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.1"
mkdocs-markdownextradata-plugin = "^0.2.5"
mkdocstrings = {extras = ["python"], version = "^0.22.0"}
mkdocs-material = "^9.1.21"
mkdocs-autorefs = "^0.4.1"
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.0"
mkdocs-minify-plugin = "^0.7.1"



[tool.poetry.group.lint.dependencies]
disnake = "^2.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 100
target-version = ["py38", "py39","py310","py311"]

[tool.ruff.isort]
combine-as-imports = true

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.8"
ignore = ["tests/","docs/", "site/", "examples/"]

[tool.ruff]
line-length = 100
select = [
    "E",
    "F",
    "W",
    "I",
    "D",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "FBT",
    "B",
    "C4",
    "DTZ",
    "T10",
    "EM",
    "ISC",
    "G",
    "PIE",
    "T20",
    "Q",
    "RSE",
    "RET",
    "SIM",
    "TCH",
    "ARG",
    "PGH",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "TRY",
    "RUF",
]
ignore = [
    "F403", # star imports
    # I'll do dosctrings how I want, thanks
    "D400", # periods?  who needs them?
    "D205", # bite my spacing

    # keep support for py3.8
    "UP035", # deprecated imports
    "UP007", # still need unions.
    "ANN101", # self and cls annotations?
    "UP006", # What do you have against Dict/List?

    "PGH003", # pyright erros are too long, so...
    "SIM105", # try/except is better the one time it's used.
    "PLR0913", # sorry, but those are needed parameters.

    # contradicting return rules. But why?
    "RET502", # do not explicitly return None
    "RET503", # explicitly return None.

    "FBT001", # positional boolean?  what?
]

[tool.ruff.per-file-ignores]
"src/helply/helply" = ["PLW2901"] # returns a localized variant, get outta here.
"src/helply/types/*" = ["ANN401","D105"]
"examples/*" = ["ALL"]
"tests/*" = ["ALL"]

[tool.ruff.pydocstyle]
convention = "numpy"
